{
    "swagger": "2.0",
    "info": {
        "version": "v0.0.1",
        "title": "Flask MVC App",
        "description": "In this documentation, we provide all the project's endpoints."
    },
    "paths": {
        "/api/services/v1/access/login": {
            "post": {
                "tags": [
                    "Access"
                ],
                "summary": "Obtain access tokens",
                "description": "Obtain access tokens",
                "required": true,
                "security": [],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "credentials",
                        "description": "credentials to obtain access tokens",
                        "schema": {
                            "$ref": "#/definitions/Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Tokens"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/services/v1/access/refresh": {
            "post": {
                "tags": [
                    "Access"
                ],
                "summary": "Refresh access tokens",
                "description": "Refresh access tokens",
                "required": true,
                "security": [],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "refresh token",
                        "description": "refresh token to obtain new access tokens",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "refresh_token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Tokens"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/services/v1/user/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "description": "Create a new user",
                "required": true,
                "security": [],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "user object to create",
                        "schema": {
                            "$ref": "#/definitions/Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "updated_at": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/services/v1/response": {
            "get": {
                "tags": [
                    "Response"
                ],
                "summary": "Get all responses",
                "description": "Get all responses",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResponseSaved"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Response"
                ],
                "summary": "Create a new response",
                "description": "Create a new response",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "response",
                        "description": "response object to create",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ResponseSaved"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/services/v1/response/{response_id}": {
            "get": {
                "tags": [
                    "Response"
                ],
                "summary": "Get one response",
                "description": "Get one response",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "response_id",
                        "type": "string",
                        "required": true,
                        "description": "response id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ResponseSaved"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "put": {
                "tags": [
                    "Response"
                ],
                "summary": "Update one response",
                "description": "Update one response",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "response_id",
                        "type": "string",
                        "required": true,
                        "description": "response id"
                    },
                    {
                        "in": "body",
                        "name": "response",
                        "description": "response object to create",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ResponseSaved"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Response"
                ],
                "summary": "Delete one response",
                "description": "Delete one response",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "response_id",
                        "type": "string",
                        "required": true,
                        "description": "response id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/services/v1/tag": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get all tags",
                "description": "Get all tags",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TagSaved"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tag"
                ],
                "summary": "Create a new tag",
                "description": "Create a new tag",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "tag",
                        "description": "tag object to create",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TagSaved"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/services/v1/tag/{tag_id}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get one tag",
                "description": "Get one tag",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "tag_id",
                        "type": "string",
                        "required": true,
                        "description": "tag id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TagSaved"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tag"
                ],
                "summary": "Update one tag",
                "description": "Update one tag",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "tag_id",
                        "type": "string",
                        "required": true,
                        "description": "tag id"
                    },
                    {
                        "in": "body",
                        "name": "tag",
                        "description": "tag object to create",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TagSaved"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tag"
                ],
                "summary": "Delete one tag",
                "description": "Delete one tag",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "tag_id",
                        "type": "string",
                        "required": true,
                        "description": "tag id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "Tokens": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "Credentials": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "tag": {
                    "type": "string"
                }
            }
        },
        "TagSaved": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                }
            }
        },
        "Response": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ResponseSaved": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TagSaved"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                }
            }
        }
    }
}